name: 'Build'

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  ci-checks:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js from .tool-versions
        uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: System info
        run: uname -a
      - name: Run this action (test)
        id: mvnd
        uses: ./
        with:
          version: '1.0.2'
      - name: Echo mvnd binary path (Unix)
        if: runner.os != 'Windows'
        run: |
          ls -la ${{ steps.mvnd.outputs.cached-binary-path }}
          file ${{ steps.mvnd.outputs.cached-binary-path }}

      - name: Check mvnd directory path (Unix)
        if: runner.os != 'Windows'
        run: |
          echo "Directory path: ${{ steps.mvnd.outputs.cached-directory-path }}"
          if [ -d "${{ steps.mvnd.outputs.cached-directory-path }}" ]; then
            echo "Directory exists."
            ls -la "${{ steps.mvnd.outputs.cached-directory-path }}"
          else
            echo "Directory does not exist or is not a directory!" && exit 1
          fi

      - name: Echo mvnd binary path (Windows)
        if: runner.os == 'Windows'
        run: |
          dir ${{ steps.mvnd.outputs.cached-binary-path }}
          Get-Item ${{ steps.mvnd.outputs.cached-binary-path }} | Format-List *
        shell: pwsh

      - name: Check mvnd directory path (Windows)
        if: runner.os == 'Windows'
        run: |
          Write-Host "Directory path: ${{ steps.mvnd.outputs.cached-directory-path }}"
          if (Test-Path -Path "${{ steps.mvnd.outputs.cached-directory-path }}" -PathType Container) {
            Write-Host "Directory exists."
            Get-ChildItem -Path "${{ steps.mvnd.outputs.cached-directory-path }}"
          } else {
            Write-Error "Directory does not exist or is not a directory!"
            exit 1
          }
        shell: pwsh

      - name: Run example app with mvnd
        run: |
          cd example-maven-app
          mvnd --version
          mvnd clean install
